# de.unibamberg.psi.booklet-tool.yml
app-id: de.unibamberg.psi.booklet-tool
runtime: org.freedesktop.Platform
runtime-version: '24.08' # Matches BaseApp version
sdk: org.freedesktop.Sdk
base: org.electronjs.Electron2.BaseApp
base-version: '23.08' # Stable version, should exist if Flathub remote is configured
sdk-extensions:
  - org.freedesktop.Sdk.Extension.node20 # Use Node 20 SDK Extension
command: booklet-tool # Should match the executable

build-options:
  # Add Node bin to path and set required env vars for build
  append-path: /usr/lib/sdk/node20/bin
  env:
    # Set Node dir for native modules
    npm_config_nodedir: /usr/lib/sdk/node20
    # Use npm cache dir within the build sandbox
    npm_config_cache: /run/build/booklet-tool/.npm-cache
    # Recommended for reproducible builds in CI
    # npm_config_offline: 'true' # Remove offline requirement for npm
    # Correct Electron distribution type for Flatpak
    ELECTRON_OVERRIDE_DISTRIBUTION: 'flatpak'
    # Ensure electron-builder uses the correct arch from flatpak-builder
    ELECTRON_ARCH: $FLATPAK_ARCH
    # Prevent building unnecessary installers
    ELECTRON_BUILDER_ALLOW_INSTALLER_TARGET: "false"
    # Cache location for npm inside the build sandbox
    XDG_CACHE_HOME: /run/build/booklet-tool/.npm-cache
    # Add Node options here to help with potential network issues in sandbox
    NODE_OPTIONS: --dns-result-order=ipv4first

finish-args:
  # Filesystem access needed for selecting directories
  - "--filesystem=host"
  # Network access might be needed (e.g., updates?), keep for now
  - "--share=network"
  # Add Wayland/X11 socket access for GUI
  - "--socket=wayland"
  - "--socket=fallback-x11"
  # Device access might be needed depending on peripherals
  - "--device=dri"

modules:
  - name: booklet-tool
    buildsystem: simple
    build-commands:
      # Install dependencies using lockfile (allow network access)
      - npm ci --frozen-lockfile

      # Rebuild native modules using the correct Electron version and arch
      # Note: electron/package.json needs to exist and be correct
      # Ensure 'electron' is a devDependency
      - |
        if [ -f node_modules/electron/package.json ]; then
          electron_version=$(node -p "require('electron/package.json').version")
          echo "Rebuilding native modules for Electron $electron_version..."
          npx electron-rebuild -v $electron_version --arch=$FLATPAK_ARCH -f
        else
          echo "Warning: node_modules/electron/package.json not found. Skipping electron-rebuild."
          # Attempt install anyway in case rebuild isn't strictly needed
          # Or consider adding 'electron' to devDependencies if missing
        fi

      # Package the application using electron-builder's 'dir' target
      # Targets linux explicitly, uses arch from flatpak-builder.
      # Prepend NODE_OPTIONS to ensure DNS setting is applied
      - NODE_OPTIONS=--dns-result-order=ipv4first npx electron-builder --dir --linux --arch=$FLATPAK_ARCH --publish never

      # Copy the packaged application into the Flatpak's /app directory
      # Use more specific path based on arch
      - cp -r dist/linux-$FLATPAK_ARCH-unpacked/* /app/

      # Install desktop file and icon (assuming build/icon.png exists)
      - install -Dm644 build/icon.png /app/share/icons/hicolor/512x512/apps/${FLATPAK_APP_ID}.png
      # Electron-builder usually places the desktop file in the unpacked dir root
      # The name often includes the app name. Verify this path/name.
      - install -Dm644 /app/booklet-tool.desktop /app/share/applications/${FLATPAK_APP_ID}.desktop
      # Update the .desktop file Exec line if necessary (ensure 'booklet-tool' is correct command)
      - desktop-file-edit --set-key=Exec --set-value="booklet-tool %U" /app/share/applications/${FLATPAK_APP_ID}.desktop
      # Update Name if needed
      - desktop-file-edit --set-key=Name --set-value="Booklet Tool" /app/share/applications/${FLATPAK_APP_ID}.desktop

    sources:
      # Use the source code from the host directory mounted by the action
      - type: dir
        path: . 