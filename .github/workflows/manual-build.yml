name: Manual Build (Win/Linux)

on:
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: read # Read permissions needed to checkout code

jobs:
  build:
    strategy:
      matrix:
        # Use ubuntu-20.04 for better AppImage compatibility
        os: [ubuntu-22.04, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main # Explicitly checkout main

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          # Specify your Node.js version - using LTS as an example
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      # --- Install Flatpak for Linux build ---
      - name: Install Flatpak tools
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y flatpak flatpak-builder

      - name: Build application
        # Run electron-builder directly to build for the OS runner
        # It will use the config in package.json
        run: npx electron-builder --publish never
        env:
          # Disable automatic certificate discovery to prevent signing attempts
          CSC_IDENTITY_AUTO_DISCOVERY: "false"

      - name: Upload Windows Artifact
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: booklet-tool-windows-portable
          path: dist/*.exe
          retention-days: 7 # Optional: How long to keep the artifact

      - name: Upload Linux Artifact
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: booklet-tool-linux # More general name
          path: |
            dist/*.AppImage
            dist/*.deb
            dist/*.flatpak
            dist/*.tar.gz
          retention-days: 7 # Optional: How long to keep the artifact 